//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CastleBlackApplication
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CastleBlackEntities : DbContext
    {
        public CastleBlackEntities()
            : base("name=CastleBlackEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Checklist> Checklists { get; set; }
        public DbSet<Developer> Developers { get; set; }
        public DbSet<QA> QAs { get; set; }
        public DbSet<CaseItemChecklist> CaseItemChecklists { get; set; }
        public DbSet<CaseItem> CaseItems { get; set; }
        public DbSet<BlankWorkItem> BlankWorkItems { get; set; }
        public DbSet<CaseItemsLog> CaseItemsLogs { get; set; }
    
        public virtual int addUser(string username, string password, string firstName, string lastName, ObjectParameter responseMessage)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addUser", usernameParameter, passwordParameter, firstNameParameter, lastNameParameter, responseMessage);
        }
    
        public virtual int proc_CaseItemChecklistsDoUpsert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_CaseItemChecklistsDoUpsert");
        }
    }
}
